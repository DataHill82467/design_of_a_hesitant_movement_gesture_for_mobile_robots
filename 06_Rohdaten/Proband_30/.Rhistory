plot(standardBO$Time, standardBO$Velocity, sub="Standard Back-Off für alle")
rm(list=ls())
########################
# Proband einstellen
VP <- 5    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
#Standard Anfahrt und Back-Off zu Beginn der Veruscht
standardBO <- read.delim("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/Proband_02/Speed_Level1_backoff.txt")
plot(standardBO$Time, standardBO$Velocity, sub="Standard Back-Off für alle")
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
# plot
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
plot(BO_Speed$Time, BO_Speed$Velocity, sub=" finaler BO (grün)")
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
plot(BO_Speed$Time, BO_Speed$Velocity, sub=sprintf("Current working directory is %s", VP, " finaler BO (grün)"))
plot(BO_Speed$Time, BO_Speed$Velocity, sub=sprintf("Back-Offs by participant %s", VP, " in Trial %s", TR, " in the %s", View, " condition. The final Back-Off is green"))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
plot(BO_Speed$Time, BO_Speed$Velocity, sub=sprintf("Back-Offs by participant %s in Trial %s in the %s condition. The final Back-Off is green", VP, TR, View))
rm(list=ls())
########################
# Proband einstellen
VP <- 5    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
#Standard Anfahrt und Back-Off zu Beginn der Veruscht
standardBO <- read.delim("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/Proband_02/Speed_Level1_backoff.txt")
plot(standardBO$Time, standardBO$Velocity, sub="Standard Back-Off für alle")
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
# plot
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
plot(BO_Speed$Time, BO_Speed$Velocity, sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListAllBOView[TR])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
rm(list=ls())
########################
# Proband einstellen
VP <- 5    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
#Standard Anfahrt und Back-Off zu Beginn der Veruscht
standardBO <- read.delim("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/Proband_02/Speed_Level1_backoff.txt")
plot(standardBO$Time, standardBO$Velocity, sub="Standard Back-Off für alle")
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListAllBOView[TR])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s i", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
rm(list=ls())
########################
# Proband einstellen
VP <- 5    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
#Standard Anfahrt und Back-Off zu Beginn der Veruscht
standardBO <- read.delim("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/Proband_02/Speed_Level1_backoff.txt")
plot(standardBO$Time, standardBO$Velocity, sub="Standard Back-Off für alle")
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListAllBOView[TR])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s i", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
rm(list=ls())
########################
# Proband einstellen
VP <- 5    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
#Standard Anfahrt und Back-Off zu Beginn der Veruscht
standardBO <- read.delim("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/Proband_02/Speed_Level1_backoff.txt")
plot(standardBO$Time, standardBO$Velocity, sub="Standard Back-Off für alle")
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListStandardBO[1])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s i", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
rm(list=ls())
########################
# Proband einstellen
VP <- 2    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
#Standard Anfahrt und Back-Off zu Beginn der Veruscht
standardBO <- read.delim("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/Proband_02/Speed_Level1_backoff.txt")
plot(standardBO$Time, standardBO$Velocity, sub="Standard Back-Off für alle")
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListStandardBO[1])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s i", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
rm(list=ls())
#!Funktionniert für VP 3 und aufwärts!
########################
# Proband einstellen
VP <- 3    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListStandardBO[1])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s i", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
rm(list=ls())
#!Funktionniert für VP 3 und aufwärts!
########################
# Proband einstellen
VP <- 39    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListStandardBO[1])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
# Position player
ListPositionPlayer <- list.files(pattern = "_player")
# Position roboter
ListPositionRobot <- list.files(pattern = "_robot")
# Position player
ListPositionVP <- list.files(pattern = "_player")
PositionVP <- read.delim(ListPositionVP[1])
# Position roboter
ListPositionR <- list.files(pattern = "_robot")
PositionR <- read.delim(ListPositionR[1])
View(PositionVP)
rm(list=ls())
#!Funktionniert für VP 3 und aufwärts!
########################
# Proband einstellen
VP <- 7    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListStandardBO[1])
# Position player
ListPositionVP <- list.files(pattern = "_player")
PositionVP <- read.delim(ListPositionVP[1])
# Position roboter
ListPositionR <- list.files(pattern = "_robot")
PositionR <- read.delim(ListPositionR[1])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
######
## PLOTS
#####
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s", VP))
# Position VP
plot(PositionVP$X, PositionVP$Y, xlab="X []", ylab="Y []", sub=sprintf("Position of participant %s during the experiment", VP))
# Position Roboter
plot(PositionR$X, PositionR$Y, xlab="X []", ylab="Y []", sub=sprintf("Position of robot in the experiment of participant %s", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
######
## PLOTS
#####
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s", VP))
# Position VP
plot(PositionVP$X, PositionVP$Z, xlab="X []", ylab="Y []", sub=sprintf("Position of participant %s during the experiment", VP))
# Position Roboter
plot(PositionR$X, PositionR$Z, xlab="X []", ylab="Y []", sub=sprintf("Position of robot in the experiment of participant %s", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
# Position VP
plot(PositionVP$X, PositionVP$Z, xlab="X []", ylab="Y []", sub=sprintf("Position of participant %s during the experiment of total time of %s", VP, PositionVP$Time[nrow(PositionVP)]/60))
PositionVP$Time[nrow(PositionVP)]
plot(PositionVP$X, PositionVP$Z, xlab="X []", ylab="Y []", sub=sprintf("Position of participant %s during the experiment of total time of %s Minutes", VP, PositionVP$Time[nrow(PositionVP)]/60))
rm(list=ls())
#!Funktionniert für VP 3 und aufwärts!
########################
# Proband einstellen
VP <- 30    ##############
#########################
# Trial einstellen
TR <- 2    ##############
#########################
# Blickwinkel einstellen (H/V)
View <- 'V'  ##############
#########################
# Jetzt wird eingelesen
#Liste mit Probanden erzeugen
(list=ls())
setwd("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/")
ListVP <- list.files()
# BackOffs der ausgewählten Probanden aus jedem Trial in Liste schreiben
setwd(paste("C:/Users/Jakob Reinhardt/Desktop/Back-Off_VR_Neuauswertung/06_Rohdaten/",ListVP[VP], sep=''))
# Eingewöhnung (Level1)
ListStandardBO <- list.files(pattern = "Level1")
standardBO <- read.delim(ListStandardBO[1])
# Position player
ListPositionVP <- list.files(pattern = "_player")
PositionVP <- read.delim(ListPositionVP[1])
# Position roboter
ListPositionR <- list.files(pattern = "_robot")
PositionR <- read.delim(ListPositionR[1])
# Die BackOffs aus den Einstelltrials
if(View == 'V')
{ListAllBOView<- list.files(pattern = "V_backoff")}
if(View == 'H')
{ListAllBOView<- list.files(pattern = "H_backoff")}
# spezifischen BackOff Einstellverlauf für VP, TR und Blickwinkel einlesen
BO_Speed <- read.delim(ListAllBOView[TR])
#finde den letzten BO einstell cycle
for(i in nrow(BO_Speed):1) #analysiert datensatz von hinten nach vorne
{
if (BO_Speed$Time[i] == 0.0)
{
print(i)
lastBO<-i
break # n <- i #speichert zeilen index das beginns des letztesn cycle in n
}
}
######
## PLOTS
#####
# plot Gewöhnungsbackoff
plot(standardBO$Time, standardBO$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Standard Back-off (Gewöhnung) by participant %s", VP))
# Position VP
plot(PositionVP$X, PositionVP$Z, xlab="X []", ylab="Y []", sub=sprintf("Position of participant %s during the experiment of total time of %s Minutes", VP, PositionVP$Time[nrow(PositionVP)]/60))
# Position Roboter
plot(PositionR$X, PositionR$Z, xlab="X []", ylab="Y []", sub=sprintf("Position of robot in the experiment of participant %s", VP))
# plot Einstellbackoff je nach trial, und Blickwinkel
plot(BO_Speed$Time, BO_Speed$Velocity, xlab="time [s]", ylab="velocity [m/s]", sub=sprintf("Back-off adjustment by participant %s in the %s condition of trial %s . The final Back-Off is green", VP, View, TR))
points(BO_Speed$Time[lastBO:nrow(BO_Speed)], BO_Speed$Velocity[lastBO:nrow(BO_Speed)], col= 'green')
